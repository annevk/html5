<!doctype html>
<html>
 <head>
  <title></title>
  <script src=dom2string.js></script>
  <style>
    body, pre { font-size:1em/1 }
    pre.overview:hover { background:#ccc }
  </style>
 </head>
 <body>
  <p><iframe></iframe></p>
  <p><input type="button" value="Start!"> <input type="checkbox"></p>
  <script>
   var iframe = document.getElementsByTagName("iframe")[0], ieQuirks = false, r,
       arrTests, arrData, arrExpected, log, failList, resource, expected, result

   document.getElementsByTagName("input")[0].onclick = function() {
     run(["data/tests6.dat", "data/tests5.dat", "data/tests3.dat", "data/tests2.dat", "data/tests1.dat"])
   }

   document.getElementsByTagName("input")[1].onclick = function() {
     ieQuirks = !ieQuirks
   }
   
   function run(resources) {
     var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP")
     r = 0; arrTests = []; arrData = []; arrExpected = []; log = ""; failList = []
     resource = resources.pop()
     if(resource) {
       xhr.open("GET", resource)
       xhr.onreadystatechange = function() {
         if (xhr.readyState == 4) {
           arrTests = xhr.responseText.split(/\n*^#data\n/m);
           if (arrTests[0] == "")
             arrTests.splice(0, 1);
           for (var i = 0, len = arrTests.length; i < len; ++i) {
             arrData.push(arrTests[i].split("\n#errors")[0]);
             arrExpected.push(arrTests[i].split("#document")[1]);
           }
           process(r)
           run(resources)
         }
       }
       xhr.send(null)
     }
   }

   function process(i) {
     iframe.contentWindow.document.open();
     iframe.contentWindow.document.write(arrData[i]);
     iframe.contentWindow.document.close();
     runner(arrExpected[i]);
   }

   function filter(str) {
     var pieces = str.split("\n"), result = []
     for(piece in pieces) {
       if(pieces[piece] != "|     <title>" && !/\| <!-- ctype ht -->/i.test(pieces[piece]) && !/\| <!doctype html>/i.test(pieces[piece]))
         result.push(pieces[piece])
     }
     return result.join("\n")
   }
   
   function runner(expected) {
     result = dom2string(iframe.contentWindow.document);
     if(ieQuirks) {
       result = filter(result)
       expected = filter(expected)
     }
     if ((r + 1) == arrData.length)
       result += "\n"
     if (result != expected) {
       failList.push(r)
       log += "\n\nTest " + (r + 1) + " of " + arrData.length + " in " + resource + " failed. Input:\n" + arrData[r] + "\nGot:" + result + "\nExpected:" + expected;
     }
     r++;
     if (r >= arrData.length) {
       results();
       return;
     }
     process(r);
   }

   function results(){
     var div = document.createElement("div")
     if (failList.length) {
       var overview = document.createElement("pre")
       overview.innerHTML = resource + ": " + failList
       overview.className = "overview"
       overview.title = "Click for more details"
       overview.onclick = function() { this.nextSibling.style.display = this.nextSibling.style.display == "none" ? "block" : "none" }
       var detailed = document.createElement("pre")
       detailed.innerHTML = "x"
       detailed.firstChild.data = log.replace(/\n/g,"\r\n");
       detailed.style.display = "none"
       div.appendChild(overview)
       div.appendChild(detailed)
     } else {
       div.innerHTML = "<pre>" + resource + ": PASS<\/pre>";
     }
     document.body.appendChild(div)
   }
  </script>
 </body>
</html>